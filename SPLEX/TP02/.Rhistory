library(cluster)
set.seed(19)
data <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(data) <- c("x", "y")
cl1 <- kmeans(data, 2)
plot(data, col = cl1$cluster)
points(cl1$centers, col = 1:2, pch = 8, cex=2)
help(rnorm)
help(rnorm)
data
help(hclust)
help(hclust)
hc <- hclust(data)
data
hc <- hclust(dist(data))
plot(hc)
help(cutree)
cutree(hc)
cutree(hc, k=1:5)
cutree(hc, h=250)
plot(cutree(hc, k = 2))
plot(hc,cutree(hc, k = 2))
help(silouette)
help(silhouette)
silhouette(cutree(hc, k = 2), data)
help(dist)
silhouette(cutree(hc, k = 2), dist(data))
plot(silhouette(cutree(hc, k = 2), dist(data)))
data(obese)
data(obese)
data('obese')
library(FunNet)
library('FunNet')
install.packages(FunNet)
install.packages("FunNet")
install.packages('ade4')
install.packages('sna')
install.packages('Cairo')
install.packages('ade4')
history
history()
source("http://bioconductor.org/biocLite.R")
help(object)
help(objects)
library(FactoMineR)
library("FactoMineR")
install.packages("FactoMineR")
install.packages("FactoMineR")
install.packages("FactoMineR")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
help(PCA)
library(FactoMineR)
help(PCA)
source("tp02.R")
source("tp02.R")
source("tp02.R")
help(pdf)
source("tp02.R")
source("tp02.R")
source("tp02.R")
data(obese)
source("tp02.R")
help(pdf)
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
plot(silVec)
plot(silVec)
source("tp02.R")
source("tp02.R")
source("tp02.R")
unlist(up.frame)
source("tp02.R")
dim(up.frame)
dim(down.frame)
colnames(up.frame)
colnames(down.frame)
matrix(up.frame)
as.matrix(up.frame)
m <- as.matrix(up.frame)
help(apply)
apply(m, 1, as.numeric)
upm <- apply(as.matrix(up.frame), 1, as.numeric)
dnm <- apply(as.matrix(down.frame), 1, as.numeric)
cbind(upm,dnm)
dim(cbind(upm,dnm))
dim(upm,dnm)
dim(upm)
ud <- cbind(upm,dnm)
PCA(ud)
help(ud)
help(PCA)
colnames(ud)
rownames(ud)
as.character(1:nrow(ud))
as.character(1:ncol(ud))
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
cl2
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
help(PCA)
help(PCA)
PCA(ud)
res <- PCA(ud)
res$eig
plot(res)
plot(res)
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
res.pca
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
ncol(ud)
source("tp02.R")
source("tp02.R")
source("tp02.R")
help(plot)
res.pca$eig
res.pca$ind
source("tp02.R")
res.pca$call$X[, habillage]
res.pca$call$X
source("tp02.R")
source("tp02.R")
source("tp02.R")
summary(res.pca)
res.pca$ind
res.pca$ind$coord
res.pca$ind$coord
res.pca <- PCA(ud,graph = T,quali.sup = 2)
res.pca$ind$coord
hcpc(res.pca)
HCPC(res.pca)
res.hcpc <- HCPC(res.pca)
help(HCPC)
res.hcpc <- HCPC(res.pca,graph=F)
plot(res.hcpc)
o
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
help(plot.HCPC)
source("tp02.R")
help(plot.PCA)
source("tp02.R")
help(plot.HCPC)
source("tp02.R")
source("tp02.R")
source("tp02.R")
res.pca <- PCA(ud,graph = T,quali.sup = 2,axes=c(1, 2), choix="ind", habillage=13)
res.pca <- PCA(ud,graph = F)
plot.PCA(res.pca,axes=c(1, 2), choix="ind", habillage=13))
plot.PCA(res.pca,axes=c(1, 2), choix="ind", habillage=13)
res.pca <- PCA(ud,graph = F,scale.unit=TRUE, ncp=5, quanti.sup=c(11: 12), quali.sup=13)
plot.PCA(res.pca,axes=c(1, 2), choix="ind", habillage=13)
plot.PCA(res.pca,quali.sup=5)
res.pca <- PCA(ud,graph = F)
plot.PCA(res.pca,habillage = 5, col.hab = c("green", "blue", "red"))
res.pca <- PCA(ud,graph = T,quali.sup=5)
res.pca <- PCA(ud,graph = F,quali.sup=5)
plot.PCA(res.pca,habillage = 5, col.hab = c("green", "blue", "red"))
source("tp02.R")
source("tp02.R")
source("tp02.R")
source("tp02.R")
res.pca
rownames(ud)
source("tp02.R")
source("tp02.R")
help(plot.PCA)
source("tp02.R")
source("tp02.R")
ct <- cutree(hc, k = 2) 
print(ct)
ct <- cutree(hc, k = 3) 
print(ct)
typeof(ct)
dim(ct)
ct[2]
ct[2,]
ct[2]
summary(ct)
colnames[ct]
names(ct)
names(ct[3])
names(ct[3,5,7])
names(ct[c(3,5,7)])
ct == 1
names(ct[ct==1])
source("tp02.R")
source("tp02.R")
source("tp02.R")
help(plot)
cl2
help(plot)
source("tp02.R")
